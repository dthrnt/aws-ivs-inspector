name: 04:test

on: #workflow_dispatch
  push:
    branches:
      - main

jobs:
  web-app:
    runs-on: ubuntu-latest
    environment: terraform_admin
    env:
      TF_LOG: INFO
      GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      AWS_AMPLIFY_APP_ID: ${{vars.AMPLIFY_APP_ID}}
      region: "us-east-1"
      rest_id: ""
    steps:
      - name: Checkout the repositoring to the runner
        uses: actions/checkout@v4

      - name: build data
        id: build_data
        run: |
          cat ./src/assets/envVars.json
          # echo "fields=`echo {\".apis.${region}.rest\" : ${region}} | jq -R`" >> $GITHUB_OUTPUT
          jq '.apis.${region}.rest="${rest_id}"' ./src/assets/envVars.json | sponge ./src/assets/envVars.json

      - name: Update envVars.json in repo
        uses: restackio/update-json-file-action@2.1
        with:
          file: ./src/assets/envVars.json
          fields: ${{ steps.build_data.outputs.fields }}
          # fields: '{"scripts.test": "quasar test"}'

      - name: view the json
        run: |
          cat ./src/assets/envVars.json

      - name: Git Commit
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add ./src/assets/envVars.json
          git commit -a -m "Add changes"

      - name: Git Push
        uses: ad-m/github-push-action@v0.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: true

      # - name: Install Amplify CLI
      #   run: |
      #     # cd web-application
      #     npm install -g @aws-amplify/cli
      #     # ls -lh

      #     ENV_NAME="backend"

      #     VUECONFIG="{\
      #     \"SourceDir\":\"src\",\
      #     \"DistributionDir\":\"dist/spa\",\
      #     \"BuildCommand\":\"npm run build\",\
      #     \"StartCommand\":\"npm run start\"\
      #     }"

      #     FRONTEND="{\
      #     \"frontend\":\"javascript\",\
      #     \"framework\":\"vue\",\
      #     \"config\":$VUECONFIG\
      #     }"

      #     # note: session token cannot be passed in here
      #     AWSCLOUDFORMATIONCONFIG="{\
      #     \"configLevel\":\"project\",\
      #     \"useProfile\":false,\
      #     \"accessKeyId\":\"$AWS_ACCESS_KEY_ID\",\
      #     \"secretAccessKey\":\"$AWS_SECRET_ACCESS_KEY\",\
      #     \"region\":\"ap-south-1\"\
      #     }"

      #     AMPLIFY="{\
      #     \"projectName\":\"Inspector\",\
      #     \"envName\":\"$ENV_NAME\",\
      #     \"defaultEditor\":\"code\"\
      #     }"

      #     PROVIDERS="{\
      #     \"awscloudformation\":$AWSCLOUDFORMATIONCONFIG\
      #     }"

      #     # echo "Initializing Amplify project for env: $ENV_NAME"

      #     # amplify init \
      #     # --amplify $AMPLIFY \
      #     # --frontend $FRONTEND \
      #     # --providers $PROVIDERS \
      #     # --yes

      #     echo "Pull Amplify project for env: $ENV_NAME"
      #     amplify pull --appId $AWS_AMPLIFY_APP_ID --providers $PROVIDERS

      #     # echo "amplify hosting add for env: $ENV_NAME"
      #     # amplify add hosting

      #     echo "Publish Amplify project for env: $ENV_NAME"
      #     amplify publish --appId $AWS_AMPLIFY_APP_ID --providers $PROVIDERS

      # - name: Configure Amplify
      #   run: |
      #     amplify configure --appId $AWS_AMPLIFY_APP_ID --yes
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
      #     AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}

      # - name: Deploy to Amplify
      #   run: |
      #     amplify pull --appId $AWS_AMPLIFY_APP_ID --envName backend
      #     amplify publish --appId $AWS_AMPLIFY_APP_ID --branch ivs --envName backend
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
      #     AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}

      # - name: test gh cli
      #   run: |
      #     gh variable set test_key --body "test_value1" --env terraform_admin

      # - name: test aws cli for amplify
      #   env:
      #     test_json: "{account_id: 123, api: 456}"
      #   run: |
      #     cd web-application
      #     aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
      #     aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
      #     aws configure set region "ap-south-1"
      #     aws amplify update-app --app-id $AWS_AMPLIFY_APP_ID --enable-branch-auto-build --environment-variables '{"account_id": "123", "api": "456"}'

      # - name: test github Checkout
      #   run: |
      #     repo=${{ github.server_url }}/${{ github.repository }}/web-application
      #     echo "${repo}"

      # - name: test aws cli for amplify deployment
      #   env:
      #     region: "ap-south-1"
      #   run: |
      #     region_key="VITE_${region}_APIS"
      #     echo "$region_key"

      #     set $(iostat)
      #     myvar=6
      #     eval "echo \${$myvar}"

      #     eval "myVar=\$${i}"
      #     echo "myVar: [${myVar}]"

      #     test_json='{"VITE_ACCOUNT_ID": "740024244647", "[${region_key}]": "{\"REST_API\":\"5t4nrs7xgh\"}"}'
      #     echo "$test_json"
      #     aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
      #     aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
      #     aws configure set region "ap-south-1"
      #     existing_env_vars=$(aws amplify get-app --app-id $AWS_AMPLIFY_APP_ID | jq '.app.environmentVariables')
      #     echo "$existing_env_vars"
      #     aws amplify update-app --app-id $AWS_AMPLIFY_APP_ID --environment-variables "${test_json}"
      #     # aws amplify start-job --app-id $AWS_AMPLIFY_APP_ID --branch-name main --job-type RELEASE
