name: 02:AWS IVS Inspector - AWS Infra

on:
  #workflow_dispatch
  push:
    branches:
      - main

env:
  TF_LOG: INFO
  GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
  AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
  AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
  TF_VAR_account_id: ${{ secrets.ACCOUNT_ID }}
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
  AWS_AMPLIFY_APP_ID: ${{vars.AMPLIFY_APP_ID}}
  TF_VAR_region: "ap-south-1"
  tmpValue: $(mktemp)
  tmpJson: $(mktemp)
  envVarsPath: ./src/assets/envVars.json

jobs:
  terraform_for_infra:
    runs-on: ubuntu-latest
    environment: terraform_admin
    # env:
    #   TF_LOG: INFO
    #   TF_VAR_account_id: ${{ secrets.ACCOUNT_ID }}
    #   TF_VAR_region: ap-south-1
    #   AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #   AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #   BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
    #   AWS_AMPLIFY_APP_ID: ${{ vars.AMPLIFY_APP_ID }}

    steps:
      - name: Checkout the repository to the runner
        uses: actions/checkout@v4

      - name: Setup Terraform with specific version on the runner
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.2

      - name: Terraform Init
        id: init
        run: |
          cd terraform-infra
          terraform fmt
          terraform init \
           -backend-config="bucket=${{ secrets.BUCKET_TF_STATE }}" \
           -backend-config="key=infra/$TF_VAR_region/terraform.tfstate" \
           -backend-config="region=us-west-2"

      # - name: Terraform Validate
      #   id: validate
      #   run: |
      #     cd terraform-infra
      #     terraform validate

      # - name: Terraform Plan
      #   id: plan
      #   run: |
      #     cd terraform-infra
      #     terraform plan -no-color -input=false
      #   continue-on-error: true

      # - name: Terraform Apply
      #   id: apply
      #   if: github.ref == 'refs/heads/main'
      #   run: |
      #     cd terraform-infra
      #     terraform apply -auto-approve -input=false
      #     # echo "api_ids=$(terraform output -json api_ids)" >> $GITHUB_OUTPUT

      - name: Terraform Output
        id: output
        if: github.ref == 'refs/heads/main'
        run: |
          cd terraform-infra
          # terraform output -json
          echo "api_ids=$(terraform output -json api_ids)" >> $GITHUB_OUTPUT
          # terraform output -json api_ids > ./api_ids
          # cat ./api_ids
          # ls -lh
          # jq -rc .[$TF_VAR_region] < ./api_ids
          # jq -rc .$TF_VAR_region < ./api_ids
          # jq -rc .[${TF_VAR_region}] < ./api_ids
          # jq -rc .${TF_VAR_region} < ./api_ids
          # jq --arg region "$TF_VAR_region" --arg v  '.[$region][$v]' ./api_ids

          # jq --arg region --argjson a $api_ids  "$TF_VAR_region" .[$region]

    outputs:
      api_ids: ${{ steps.output.outputs.api_ids }}

  update_environment_variables:
    runs-on: ubuntu-latest
    environment: terraform_admin
    needs: terraform_for_infra
    steps:
      - name: Checkout the repositoring to the runner
        uses: actions/checkout@v4

      - name: build data
        id: build_data
        run: |

          # echo $TF_VAR_region
          jq --arg region "$TF_VAR_region" '.[$region]' <<< "${{needs.terraform_for_infra.outputs.api_ids}}" > "$tmpValue"
          # cat $tmpValue
          jq --arg region "$TF_VAR_region" '.apis[$region] = [$tmpValue]' "$envVarsPath" > "$tmpJson" && mv "$tmpJson" "$envVarsPath"

          # api_values=$(jq --arg region "$TF_VAR_region" '.[$region]' <<< "${{needs.terraform_for_infra.outputs.api_ids}}")
          # jq --arg region "$TF_VAR_region" --arg value "$api_values" '.apis' "$envVarsPath"
          # echo "$api_values"
          # envVars=$(jq --arg region "$TF_VAR_region" --arg value "$api_values" '.apis[$region] = $value' "$envVarsPath")
          cat $envVarsPath

      # - name: Git Commit
      #   run: |
      #     cat $envVarsPath
      #     git config --local user.email "github-actions[bot]@users.noreply.github.com"
      #     git config --local user.name "github-actions[bot]"
      #     git add $envVarsPath
      #     git commit --allow-empty -m "update environment variables"

      # - name: Git Push
      #   uses: ad-m/github-push-action@v0.8.0
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     force: true
