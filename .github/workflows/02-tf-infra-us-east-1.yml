name: 02:AWS Infra us-east-1

on: #workflow_dispatch
  push:
    branches:
      - dev

env:
  TF_VAR_region: "us-east-1"
  TF_VAR_project_name: ${{ secrets.IVS_PROJECT_NAME }}
  TF_VAR_account_id: ${{ secrets.AWS_ACCOUNT_ID }}
  TF_LOG: INFO
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_S3_BUCKET_FOR_TF_STATE: ${{ secrets.AWS_S3_BUCKET_FOR_TF_STATE }}
  AWS_S3_BUCKET_FOR_TF_STATE_REGION: ${{ secrets.AWS_S3_BUCKET_FOR_TF_STATE_REGION }}
  AWS_AMPLIFY_APP_ID: ${{vars.AMPLIFY_APP_ID}}
  AWS_AMPLIFY_APP_REGION: "us-east-2"
  tmpJson: $(mktemp)
  envVarsPath: ./web-application/.env

jobs:
  terraform_for_infra:
    runs-on: ubuntu-latest
    environment: ivs_inspector_backend

    steps:
      - name: Checkout the repository to the runner
        uses: actions/checkout@v4

      - name: Setup Terraform with specific version on the runner
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.2

      - name: Terraform Init
        id: init
        run: |
          cd terraform-infra
          terraform fmt
          terraform init \
           -backend-config="bucket=$AWS_S3_BUCKET_FOR_TF_STATE" \
           -backend-config="key=infra/$TF_VAR_region/terraform.tfstate" \
           -backend-config="region=$AWS_S3_BUCKET_FOR_TF_STATE_REGION" \
           -reconfigure

      # - name: Terraform Validate
      #   id: validate
      #   run: |
      #     cd terraform-infra
      #     terraform validate

      # - name: Terraform Plan
      #   id: plan
      #   run: |
      #     cd terraform-infra
      #     terraform plan -no-color -input=false
      #   continue-on-error: true

      # - name: Terraform Apply
      #   id: apply
      #   run: |
      #     cd terraform-infra
      #     terraform apply -auto-approve -input=false

      - name: Terraform Output
        id: output
        run: |
          cd terraform-infra
          echo "api_ids=$(terraform output -json api_ids)" >> $GITHUB_OUTPUT

    outputs:
      api_ids: ${{ steps.output.outputs.api_ids }}

  update_webapp_repo_env_vars:
    name: "Adding API IDs into Env Var file"
    runs-on: ubuntu-latest
    environment: ivs_inspector_backend
    needs: terraform_for_infra
    steps:
      - name: Checkout the repositoring to the runner
        uses: actions/checkout@v4

      - name: build API data
        id: build_api_data
        run: |
          api_values=$(jq --arg region "$TF_VAR_region" '.[$region]' <<< "${{needs.terraform_for_infra.outputs.api_ids}}")
          jq --arg region "$TF_VAR_region" --arg values "$api_values" '$region = $values' "$envVarsPath" > "$tmpJson" && mv "$tmpJson" "$envVarsPath"
          cat $envVarsPath

      - name: Git Commit
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add $envVarsPath
          git commit --allow-empty -m "update environment variables"

      - name: Git Push
        uses: ad-m/github-push-action@v0.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          force: true

  update_amplify_env_vars:
    name: "Adding API IDs into Amplify Env Var"
    runs-on: ubuntu-latest
    environment: ivs_inspector_backend
    needs: terraform_for_infra
    steps:
      - name: Checkout the repositoring to the runner
        uses: actions/checkout@v4

      - name: amplify env vars update using AWS CLI
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set region $AWS_AMPLIFY_APP_REGION

          final_env_var=""

          current_env_vars=$(aws amplify get-app --app-id $AWS_AMPLIFY_APP_ID | jq '.app.environmentVariables')
          # echo $current_env_vars
          api_values=$(jq --arg region "$TF_VAR_region" '.[$region]' <<< "${{needs.terraform_for_infra.outputs.api_ids}}" | jq '@json')
          # echo $api_values
          # jq --arg region "$TF_VAR_region" --arg env2 $api_values '. + {heading: {user: [$username]}}' sample.json

          echo "$(jq --arg region "$TF_VAR_region" --arg env2 $api_values '. + {($region): $env2}' <<< "$current_env_vars")" > "$tmpJson"
          # echo $(cat current_env_vars.json) | jq '@json' > $final_env_var

          echo $tmpJson

          aws amplify update-app --app-id $AWS_AMPLIFY_APP_ID --environment-variables $tmpJson
